/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useMemo, useState } from 'react';
import { shaderMaterial, useGLTF } from '@react-three/drei';
import { useFrame, useLoader } from '@react-three/fiber';
import { MathUtils, ShaderMaterial, TextureLoader } from 'three';
import { DefaultVertex, TextureMixFragment } from '../materials/TextureMix';

export function LivingRoom(
  props: JSX.IntrinsicElements['group'] & { isDarkMode: boolean },
) {
  const { nodes } = useGLTF('/model/livingRoom.glb') as any;

  const nightTexture = useLoader(TextureLoader, '/model/LivingRoom_Night.png');
  nightTexture.flipY = false;
  const dayTexture = useLoader(TextureLoader, '/model/LivingRoom_Day.png');
  dayTexture.flipY = false;

  const [mix, setMix] = useState(props.isDarkMode ? 1 : 0);

  useFrame(() => {
    if ((props.isDarkMode && mix !== 1) || (!props.isDarkMode && mix !== 0)) {
      setMix(MathUtils.lerp(mix, props.isDarkMode ? 1 : 0, 0.05));
    }
  });

  const material = useMemo(
    () =>
      new ShaderMaterial({
        uniforms: {
          textureA: { value: dayTexture as THREE.Texture },
          textureB: { value: nightTexture as THREE.Texture },
          mixWeight: { value: mix },
        },
        vertexShader: DefaultVertex,
        fragmentShader: TextureMixFragment,
      }),
    [mix],
  );

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.TV_Baked.geometry} material={material} />
      <mesh geometry={nodes.Xbox_Baked.geometry} material={material} />
      <mesh geometry={nodes.Sofa_Baked.geometry} material={material} />
      <mesh geometry={nodes.TV_Cabinet_Baked.geometry} material={material} />
      <mesh geometry={nodes.Walls_Baked.geometry} material={material} />
      <mesh geometry={nodes.Door_Baked.geometry} material={material} />
      <mesh geometry={nodes.Planks_Baked.geometry} material={material} />
      <mesh geometry={nodes.Foundation_Baked.geometry} material={material} />
    </group>
  );
}

useGLTF.preload('/livingRoom.glb');
