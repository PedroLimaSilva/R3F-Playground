/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react';
import { useAnimations, useGLTF, useMatcapTexture } from '@react-three/drei';
import { AnimationAction, CircleGeometry } from 'three';

export function Robot(props: JSX.IntrinsicElements['group']) {
  const body = useRef(null);
  const brush = useRef(null);

  const { nodes, materials, animations } = useGLTF('/model/robot.glb') as any;
  const { actions } = useAnimations(animations, brush);
  const { actions: robotActions } = useAnimations(animations, body);

  useEffect(() => {
    (actions?.['BrushAction'] as AnimationAction)?.play();
    (robotActions?.['RobotAction'] as AnimationAction)?.play();
  });

  return (
    <group
      scale={[0.09, 0.1, 0.09]}
      rotation={[0, Math.PI, 0]}
      ref={body}
      {...props}
      dispose={null}
    >
      <mesh
        name="Brush"
        ref={brush}
        castShadow
        receiveShadow
        geometry={nodes.Brush.geometry}
        material={materials['Material.002']}
        position={[0.601, 0.048, -0.639]}
        rotation={[0, -0.217, 0]}
        scale={0.459}
      />
      <mesh
        name="Body"
        castShadow
        receiveShadow
        geometry={nodes.Body.geometry}
        material={materials['Material.001']}
      />
      <mesh
        name="Shadow"
        castShadow
        receiveShadow
        geometry={nodes.Shadow.geometry}
        material={materials['Material.003']}
        position={[0, 0.029, 0]}
        scale={1.1}
      />
    </group>
  );
}

useGLTF.preload('/model/robot.glb');
